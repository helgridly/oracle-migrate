#!/usr/bin/env node
const argv = require('yargs').argv;

const libCommands = require('../lib').commands;
const tools = require('../lib').tools;

let config;

const args = {
  cmd: argv._[0],
  subcmd: argv._[1]
}
const usage = [
  '',
  '  Usage: migrate [command]',
  '',
  '  Commands:',
  '',
  '     down               migrate down by 1 file',
  '     down   [name]      migrate down till given migration',
  '     down   all         migrate down to init state',
  '     up                 migrate till most recent migration file',
  '     up     [name]      migrate up till given migration (the default command)',
  '     create [title]     create a new migration file with optional [title]',
  '     ---------------------------------------------------------------------------',
  '     list               shows all local migration scripts',
  '     history            fetches migration history from the database and shows it',
  '     ---------------------------------------------------------------------------',
  '     help               prints this help',
  ''
].join('\n');
const commands = {
  up: migrationName => libCommands.performMigration('up', migrationName, config),
  down: migrationName => libCommands.performMigration('down', migrationName, config),
  create: title => libCommands.createMigrationScript(title, process.cwd()),
  history: () => libCommands.migrationHistory(config),
  list: () => libCommands.listLocalMigrations(),
  help: () => console.log(usage)
}
const run = commands[args.cmd];

process.on('uncaughtException', tools.abort);
process.on('unhandledRejection', tools.abort);
process.on('SIGINT', () => {
  tools.abort(`SIGINT`);
});

if(!run) {
  tools.abort(`unknown command "${args.cmd}"`);
}

config = tools.readConfig('.oracle-migrate', process.cwd());

libCommands.prepareMigrationFolderStructure();
run(args.subcmd);
